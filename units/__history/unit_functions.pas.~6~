unit unit_functions;

interface

uses
  IdStack, System.Classes, System.SysUtils,inifiles,vcl.forms;


procedure GetSubDirectories(const directory : string; list : TStrings);
function addTeam(const contestName, teamName, teamUser, teamPassword : string) : boolean;
function randomPassword(PLen: Integer = 8; str : string = 'BECCA0123456789'): string;
function generateTeamName(teamName : string) : string;


implementation


function addTeam(const contestName, teamName, teamUser, teamPassword : string) : boolean;
var
  ini : tinifile;
  dir : string;
begin
  result := true;
  dir := extractfilepath(application.ExeName) + '\Contests\' + contestName + '\Teams\' + teamUser;
  if not ForceDirectories(dir) then result := false;
  ini := tinifile.Create(dir + '\team.info.ini');
  try
    ini.WriteString('Team Info' ,'name',teamName);
    ini.WriteString('Team Info','user',teamUser);
    ini.WriteString('Team Info','pass',teamPassword);
  finally
    ini.Free;
  end;
end;

function generateTeamName(teamName : string) : string;
const
  ww: set of char = ['1'..'9', '0', 'a'..'z'];
var
  I : integer;
begin
  teamName := teamName.ToLower;
  I := teamName.Length;
  repeat
    if not(teamName[i] in ww) then delete(teamName, I, 1);
    dec(I);
  until i <= 0;
  if teamName = '' then teamName := randomPassword(10,'abcdefghijklmnopqrstuvwxyz1234567890');
  if teamName.Length > 10 then teamName := teamName.Remove(10);
  Result := teamName;
end;


procedure GetSubDirectories(const directory : string; list : TStrings);
 var
   sr : TSearchRec;
 begin
   try
     if FindFirst(IncludeTrailingPathDelimiter(directory) + '*.*', faDirectory, sr) < 0 then
       Exit
     else
     repeat
       if ((sr.Attr and faDirectory <> 0) AND (sr.Name <> '.') AND (sr.Name <> '..')) then
         List.Add(IncludeTrailingPathDelimiter(directory) + sr.Name) ;
     until FindNext(sr) <> 0;
   finally
     System.SysUtils.FindClose(sr) ;
   end;
 end;

function randomPassword(PLen: Integer = 8; str : string = 'BECCA0123456789'): string;
begin
  Randomize;
  Result := '';
  repeat
    Result := Result + str[Random(Length(str)) + 1];
  until (Length(Result) = PLen)
end;

end.
